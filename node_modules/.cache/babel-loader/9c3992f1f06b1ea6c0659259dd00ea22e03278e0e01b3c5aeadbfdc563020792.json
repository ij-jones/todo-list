{"ast":null,"code":"var _jsxFileName = \"/Users/isaiahjones/Desktop/todo-list/src/components/PomodoroTimerV2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst minuteSeconds = 60;\nconst timerProps = {\n  size: 200,\n  strokeWidth: 10\n};\nconst renderTime = (dimension, time) => {\n  // Check if 'time' is a number to avoid NaN display\n  if (typeof time === 'number') {\n    const minutes = Math.floor(time / minuteSeconds);\n    const seconds = time % minuteSeconds;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: `${minutes}:${seconds.toString().padStart(2, '0')}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dimension\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  // If 'time' is not a number, return a placeholder or loading state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-wrapper\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\nexport const PomodoroTimerV2 = () => {\n  _s();\n  const pomodoroTime = 10 * minuteSeconds;\n  const shortBreakTime = 5 * minuteSeconds;\n  const [key, setKey] = useState(0);\n  const [isWorkTime, setIsWorkTime] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Start the timer\n  const startTimer = () => {\n    setIsPlaying(true);\n  };\n\n  // Pause the timer\n  const pauseTimer = () => {\n    setIsPlaying(false);\n  };\n\n  // Reset the timer\n  const resetTimer = () => {\n    setIsPlaying(false); // Stop the timer\n    setKey(prevKey => prevKey + 1); // Increment key to reset the timer\n  };\n\n  // Function to handle completion of the timer\n  const onComplete = () => {\n    // Switch between work and break times\n    setIsWorkTime(!isWorkTime);\n    // Increment key to reset the timer\n    setKey(prevKey => prevKey + 1);\n    // Continue the timer without delay\n    return {\n      shouldRepeat: true,\n      delay: 0\n    };\n  };\n  const duration = isWorkTime ? pomodoroTime : shortBreakTime;\n  const color = isWorkTime ? \"#7E2E84\" : \"#218380\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro-timer-container2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-title\",\n      children: [\" \", isWorkTime ? 'Work Time' : 'Break Time']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-btn\",\n      onClick: startTimer,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-btn\",\n      onClick: pauseTimer,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-btn\",\n      onClick: resetTimer,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimerV2, \"T3ci0y6V5/i1hVLF1gdQVGIVydo=\");\n_c = PomodoroTimerV2;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimerV2\");","map":{"version":3,"names":["React","useState","CountdownCircleTimer","jsxDEV","_jsxDEV","minuteSeconds","timerProps","size","strokeWidth","renderTime","dimension","time","minutes","Math","floor","seconds","className","children","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","PomodoroTimerV2","_s","pomodoroTime","shortBreakTime","key","setKey","isWorkTime","setIsWorkTime","isPlaying","setIsPlaying","startTimer","pauseTimer","resetTimer","prevKey","onComplete","shouldRepeat","delay","duration","color","onClick","_c","$RefreshReg$"],"sources":["/Users/isaiahjones/Desktop/todo-list/src/components/PomodoroTimerV2.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst minuteSeconds = 60;\n\nconst timerProps = {\n  size: 200,\n  strokeWidth: 10,\n};\n\nconst renderTime = (dimension, time) => {\n  // Check if 'time' is a number to avoid NaN display\n  if (typeof time === 'number') {\n    const minutes = Math.floor(time / minuteSeconds);\n    const seconds = time % minuteSeconds;\n    return (\n      <div className=\"time-wrapper\">\n        <div className=\"time\">{`${minutes}:${seconds.toString().padStart(2, '0')}`}</div>\n        <div>{dimension}</div>\n      </div>\n    );\n  }\n  // If 'time' is not a number, return a placeholder or loading state\n  return <div className=\"time-wrapper\">Loading...</div>;\n};\n\nexport const PomodoroTimerV2 = () => {\n  const pomodoroTime = 10 * minuteSeconds;\n  const shortBreakTime = 5 * minuteSeconds;\n\n  const [key, setKey] = useState(0);\n  const [isWorkTime, setIsWorkTime] = useState(true);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Start the timer\n  const startTimer = () => {\n    setIsPlaying(true);\n  };\n\n  // Pause the timer\n  const pauseTimer = () => {\n    setIsPlaying(false);\n  };\n\n  // Reset the timer\n  const resetTimer = () => {\n    setIsPlaying(false); // Stop the timer\n    setKey(prevKey => prevKey + 1); // Increment key to reset the timer\n  };\n\n  // Function to handle completion of the timer\n  const onComplete = () => {\n    // Switch between work and break times\n    setIsWorkTime(!isWorkTime);\n    // Increment key to reset the timer\n    setKey((prevKey) => prevKey + 1);\n    // Continue the timer without delay\n    return { shouldRepeat: true, delay: 0 };\n  };\n\n  const duration = isWorkTime ? pomodoroTime : shortBreakTime;\n  const color = isWorkTime ? \"#7E2E84\" : \"#218380\";\n\n  return (\n    <div className=\"pomodoro-timer-container2\">\n      <div className=\"timer-display\">\n\n      </div>\n\n      <div className=\"timer-title\"> {isWorkTime ? 'Work Time' : 'Break Time'}</div>\n\n      <button className=\"timer-btn\" onClick={startTimer}>Start</button>\n      <button className=\"timer-btn\" onClick={pauseTimer}>Pause</button>\n      <button className=\"timer-btn\" onClick={resetTimer}>Reset</button>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}