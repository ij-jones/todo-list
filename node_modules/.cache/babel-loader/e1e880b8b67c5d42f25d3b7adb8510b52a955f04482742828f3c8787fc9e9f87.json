{"ast":null,"code":"var _jsxFileName = \"/Users/isaiahjones/Desktop/todo-list/src/components/PomodoroTimerV2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PomodoroTimerV2 = () => {\n  _s();\n  const workTime = 25 * 60; // 25 minutes\n  const breakTime = 5 * 60; // 5 minutes\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isWorkTime, setIsWorkTime] = useState(true); // To track if it's work time or break time\n  const [key, setKey] = useState(0); // Key to reset the timer\n\n  useEffect(() => {\n    if (isWorkTime) {\n      // Automatically start the work timer when the component mounts\n      setIsPlaying(true);\n    }\n  }, [isWorkTime]);\n\n  // Function to start the timer\n  const startTimer = () => setIsPlaying(true);\n\n  // Function to pause the timer\n  const pauseTimer = () => setIsPlaying(false);\n\n  // Function to reset the timer\n  const resetTimer = () => {\n    setIsPlaying(false);\n    setIsWorkTime(true); // Reset to work time\n    setKey(prevKey => prevKey + 1); // Increment the key to reset the timer\n  };\n\n  // Function to switch between work and break periods\n  const switchTimer = () => {\n    setIsWorkTime(!isWorkTime);\n    setKey(prevKey => prevKey + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro-timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n      className: \"pomodoro-timer-display\",\n      isPlaying: isPlaying,\n      duration: isWorkTime ? workTime : breakTime,\n      colors: [[\"#EF798A\", 0.33], [\"#D14081\", 0.33], [\"#9D174D\", 1]],\n      onComplete: switchTimer // When the timer completes, switch between work and break\n      ,\n      children: ({\n        remainingTime\n      }) => {\n        const minutes = Math.floor(remainingTime / 60);\n        const seconds = remainingTime % 60;\n        return `${minutes}:${seconds.toString().padStart(2, \"0\")}`;\n      }\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isWorkTime ? \"Work Time\" : \"Break Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-btn\",\n      onClick: startTimer,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-btn\",\n      onClick: pauseTimer,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-btn\",\n      onClick: resetTimer,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimerV2, \"4ftobTER8wBOK7IuIT6vRUeYaPk=\");\n_c = PomodoroTimerV2;\nexport default PomodoroTimerV2;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimerV2\");","map":{"version":3,"names":["React","useState","useEffect","CountdownCircleTimer","jsxDEV","_jsxDEV","PomodoroTimerV2","_s","workTime","breakTime","isPlaying","setIsPlaying","isWorkTime","setIsWorkTime","key","setKey","startTimer","pauseTimer","resetTimer","prevKey","switchTimer","className","children","duration","colors","onComplete","remainingTime","minutes","Math","floor","seconds","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/isaiahjones/Desktop/todo-list/src/components/PomodoroTimerV2.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst PomodoroTimerV2 = () => {\n  const workTime = 25 * 60; // 25 minutes\n  const breakTime = 5 * 60; // 5 minutes\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isWorkTime, setIsWorkTime] = useState(true); // To track if it's work time or break time\n  const [key, setKey] = useState(0); // Key to reset the timer\n\n  useEffect(() => {\n    if (isWorkTime) {\n      // Automatically start the work timer when the component mounts\n      setIsPlaying(true);\n    }\n  }, [isWorkTime]);\n\n  // Function to start the timer\n  const startTimer = () => setIsPlaying(true);\n\n  // Function to pause the timer\n  const pauseTimer = () => setIsPlaying(false);\n\n  // Function to reset the timer\n  const resetTimer = () => {\n    setIsPlaying(false);\n    setIsWorkTime(true); // Reset to work time\n    setKey((prevKey) => prevKey + 1); // Increment the key to reset the timer\n  };\n\n  // Function to switch between work and break periods\n  const switchTimer = () => {\n    setIsWorkTime(!isWorkTime);\n    setKey((prevKey) => prevKey + 1);\n  };\n\n  return (\n    <div className=\"pomodoro-timer-container\">\n      <CountdownCircleTimer\n        className=\"pomodoro-timer-display\"\n        key={key}\n        isPlaying={isPlaying}\n        duration={isWorkTime ? workTime : breakTime}\n        colors={[[\"#EF798A\", 0.33], [\"#D14081\", 0.33], [\"#9D174D\",1]]}\n        onComplete={switchTimer} // When the timer completes, switch between work and break\n      >\n        {({ remainingTime }) => {\n          const minutes = Math.floor(remainingTime / 60);\n          const seconds = remainingTime % 60;\n          return `${minutes}:${seconds.toString().padStart(2, \"0\")}`;\n        }}\n      </CountdownCircleTimer>\n\n      <div>{isWorkTime ? \"Work Time\" : \"Break Time\"}</div>\n\n      <button className=\"timer-btn\" onClick={startTimer}>\n        Start\n      </button>\n      <button className=\"timer-btn\" onClick={pauseTimer}>\n        Pause\n      </button>\n      <button className=\"timer-btn\" onClick={resetTimer}>\n        Reset\n      </button>\n    </div>\n  );\n};\n\nexport default PomodoroTimerV2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}