{"ast":null,"code":"var _jsxFileName = \"/Users/isaiahjones/Desktop/todo-list/src/components/PomodoroTimerV2.js\";\nimport React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst timerProps = {\n  isPlaying: true,\n  size: 120,\n  strokeWidth: 6\n};\nconst renderTime = (dimension, time) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dimension\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\nconst getTimeSeconds = time => minuteSeconds - time | 0;\nconst getTimeMinutes = time => time % hourSeconds / minuteSeconds | 0;\nexport const PomodoroTimerV2 = () => {\n  const stratTime = Date.now() / 1000;\n  const endTime = stratTime + 243248;\n  const remainingTime = endTime - stratTime;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro-timer-container2\",\n    children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n      ...timerProps,\n      colors: \"#7E2E84\",\n      duration: hourSeconds,\n      initialRemainingTime: remainingTime % hourSeconds,\n      onComplete: totalElapsedTime => ({\n        shouldRepeat: remainingTime - totalElapsedTime > minuteSeconds\n      }),\n      children: ({\n        elapsedTime,\n        color\n      }) => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color\n        },\n        children: renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = PomodoroTimerV2;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimerV2\");","map":{"version":3,"names":["React","CountdownCircleTimer","jsxDEV","_jsxDEV","minuteSeconds","hourSeconds","timerProps","isPlaying","size","strokeWidth","renderTime","dimension","time","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getTimeSeconds","getTimeMinutes","PomodoroTimerV2","stratTime","Date","now","endTime","remainingTime","colors","duration","initialRemainingTime","onComplete","totalElapsedTime","shouldRepeat","elapsedTime","color","style","_c","$RefreshReg$"],"sources":["/Users/isaiahjones/Desktop/todo-list/src/components/PomodoroTimerV2.js"],"sourcesContent":["import React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\n\nconst timerProps = {\n  isPlaying: true,\n  size: 120,\n  strokeWidth: 6,\n};\n\nconst renderTime = (dimension, time) => {\n  return (\n    <div className=\"time-wrapper\">\n      <div className=\"time\">{time}</div>\n      <div>{dimension}</div>\n    </div>\n  );\n};\n\nconst getTimeSeconds = (time) => (minuteSeconds - time) | 0;\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\n\nexport const PomodoroTimerV2 = () => {\n    const stratTime = Date.now() / 1000;\n    const endTime = stratTime + 243248; \n\n    const remainingTime = endTime - stratTime;\n\n  return (\n    <div className=\"pomodoro-timer-container2\">\n      <CountdownCircleTimer\n      {...timerProps}\n      colors=\"#7E2E84\"\n      duration={hourSeconds}\n      initialRemainingTime={remainingTime % hourSeconds}\n      onComplete={(totalElapsedTime) => ({\n        shouldRepeat: remainingTime - totalElapsedTime > minuteSeconds\n      })}\n      >\n        {({ elapsedTime, color }) => (\n          <span style={{ color }}>\n            {renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))}\n          </span>\n        )}\n      </CountdownCircleTimer>\n      <CountdownCircleTimer>\n        \n      </CountdownCircleTimer>\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,aAAa,GAAG,EAAE;AACxB,MAAMC,WAAW,GAAG,IAAI;AAExB,MAAMC,UAAU,GAAG;EACjBC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAE,GAAG;EACTC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,UAAU,GAAGA,CAACC,SAAS,EAAEC,IAAI,KAAK;EACtC,oBACET,OAAA;IAAKU,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BX,OAAA;MAAKU,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClCf,OAAA;MAAAW,QAAA,EAAMH;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAED,MAAMC,cAAc,GAAIP,IAAI,IAAMR,aAAa,GAAGQ,IAAI,GAAI,CAAC;AAC3D,MAAMQ,cAAc,GAAIR,IAAI,IAAOA,IAAI,GAAGP,WAAW,GAAID,aAAa,GAAI,CAAC;AAE3E,OAAO,MAAMiB,eAAe,GAAGA,CAAA,KAAM;EACjC,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;EACnC,MAAMC,OAAO,GAAGH,SAAS,GAAG,MAAM;EAElC,MAAMI,aAAa,GAAGD,OAAO,GAAGH,SAAS;EAE3C,oBACEnB,OAAA;IAAKU,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCX,OAAA,CAACF,oBAAoB;MAAA,GACjBK,UAAU;MACdqB,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAEvB,WAAY;MACtBwB,oBAAoB,EAAEH,aAAa,GAAGrB,WAAY;MAClDyB,UAAU,EAAGC,gBAAgB,KAAM;QACjCC,YAAY,EAAEN,aAAa,GAAGK,gBAAgB,GAAG3B;MACnD,CAAC,CAAE;MAAAU,QAAA,EAEAA,CAAC;QAAEmB,WAAW;QAAEC;MAAM,CAAC,kBACtB/B,OAAA;QAAMgC,KAAK,EAAE;UAAED;QAAM,CAAE;QAAApB,QAAA,EACpBJ,UAAU,CAAC,SAAS,EAAEU,cAAc,CAACf,WAAW,GAAG4B,WAAW,CAAC;MAAC;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACmB,CAAC,eACvBf,OAAA,CAACF,oBAAoB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAACkB,EAAA,GA5BWf,eAAe;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}