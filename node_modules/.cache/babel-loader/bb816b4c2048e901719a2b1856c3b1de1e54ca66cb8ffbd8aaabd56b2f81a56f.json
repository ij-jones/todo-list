{"ast":null,"code":"var _jsxFileName = \"/Users/isaiahjones/Desktop/todo-list/src/components/PomodoroTimerV2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst minuteSeconds = 60;\nconst timerProps = {\n  size: 200,\n  strokeWidth: 10\n};\nconst renderTime = (dimension, time) => {\n  // Check if 'time' is a number to avoid NaN display\n  if (typeof time === \"number\") {\n    const minutes = Math.floor(time / minuteSeconds);\n    const seconds = time % minuteSeconds;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: `${minutes}:${seconds.toString().padStart(2, \"0\")}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dimension\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  // If 'time' is not a number, return a placeholder or loading state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-wrapper\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\nexport const PomodoroTimerV2 = () => {\n  _s();\n  const pomodoroTime = 1 * minuteSeconds;\n  const shortBreakTime = 1 * minuteSeconds;\n  const [key, setKey] = useState(0);\n  const [isWorkTime, setIsWorkTime] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Start the timer\n  const startTimer = () => {\n    setIsPlaying(true);\n  };\n\n  // Pause the timer\n  const pauseTimer = () => {\n    setIsPlaying(false);\n  };\n\n  // Reset the timer\n  const resetTimer = () => {\n    setIsPlaying(false); // Stop the timer\n    setKey(prevKey => prevKey + 1); // Increment key to reset the timer\n  };\n\n  // Function to handle completion of the timer\n  const onComplete = () => {\n    // Switch between work and break times\n    setIsWorkTime(!isWorkTime);\n    // Increment key to reset the timer\n    setKey(prevKey => prevKey + 1);\n    // Continue the timer without delay\n    return {\n      shouldRepeat: true,\n      delay: 0\n    };\n  };\n  const duration = isWorkTime ? pomodoroTime : shortBreakTime;\n  const color = isWorkTime ? \"#ff5945\" : \"#218380\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro-timer-container2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-display\",\n      children: /*#__PURE__*/_createElement(CountdownCircleTimer, {\n        className: \"timer-display\",\n        isPlaying: isPlaying,\n        ...timerProps,\n        colors: color,\n        duration: duration,\n        key: key,\n        onComplete: onComplete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, ({\n        elapsedTime\n      }) => elapsedTime !== undefined ? renderTime(\"\", duration - Math.floor(elapsedTime)) : renderTime(\"\", duration))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-title\",\n      children: [\" \", isWorkTime ? \"Work Time\" : \"Break Time\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-btn\",\n      onClick: startTimer,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-btn\",\n      onClick: pauseTimer,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-btn\",\n      onClick: resetTimer,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimerV2, \"T3ci0y6V5/i1hVLF1gdQVGIVydo=\");\n_c = PomodoroTimerV2;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimerV2\");","map":{"version":3,"names":["React","useState","CountdownCircleTimer","jsxDEV","_jsxDEV","createElement","_createElement","minuteSeconds","timerProps","size","strokeWidth","renderTime","dimension","time","minutes","Math","floor","seconds","className","children","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","PomodoroTimerV2","_s","pomodoroTime","shortBreakTime","key","setKey","isWorkTime","setIsWorkTime","isPlaying","setIsPlaying","startTimer","pauseTimer","resetTimer","prevKey","onComplete","shouldRepeat","delay","duration","color","colors","__self","__source","elapsedTime","undefined","onClick","_c","$RefreshReg$"],"sources":["/Users/isaiahjones/Desktop/todo-list/src/components/PomodoroTimerV2.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst minuteSeconds = 60;\n\nconst timerProps = {\n  size: 200,\n  strokeWidth: 10,\n};\n\nconst renderTime = (dimension, time) => {\n  // Check if 'time' is a number to avoid NaN display\n  if (typeof time === \"number\") {\n    const minutes = Math.floor(time / minuteSeconds);\n    const seconds = time % minuteSeconds;\n    return (\n      <div className=\"time-wrapper\">\n        <div className=\"time\">{`${minutes}:${seconds\n          .toString()\n          .padStart(2, \"0\")}`}</div>\n        <div>{dimension}</div>\n      </div>\n    );\n  }\n  // If 'time' is not a number, return a placeholder or loading state\n  return <div className=\"time-wrapper\">Loading...</div>;\n};\n\nexport const PomodoroTimerV2 = () => {\n  const pomodoroTime = 1 * minuteSeconds;\n  const shortBreakTime = 1 * minuteSeconds;\n\n  const [key, setKey] = useState(0);\n  const [isWorkTime, setIsWorkTime] = useState(true);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Start the timer\n  const startTimer = () => {\n    setIsPlaying(true);\n  };\n\n  // Pause the timer\n  const pauseTimer = () => {\n    setIsPlaying(false);\n  };\n\n  // Reset the timer\n  const resetTimer = () => {\n    setIsPlaying(false); // Stop the timer\n    setKey((prevKey) => prevKey + 1); // Increment key to reset the timer\n  };\n\n  // Function to handle completion of the timer\n  const onComplete = () => {\n    // Switch between work and break times\n    setIsWorkTime(!isWorkTime);\n    // Increment key to reset the timer\n    setKey((prevKey) => prevKey + 1);\n    // Continue the timer without delay\n    return { shouldRepeat: true, delay: 0 };\n  };\n\n  const duration = isWorkTime ? pomodoroTime : shortBreakTime;\n  const color = isWorkTime ? \"#ff5945\" : \"#218380\";\n\n  return (\n    <div className=\"pomodoro-timer-container2\">\n      <div className=\"timer-display\">\n        <CountdownCircleTimer\n          className=\"timer-display\"\n          isPlaying={isPlaying}\n          {...timerProps}\n          colors={color}\n          duration={duration}\n          key={key}\n          onComplete={onComplete}\n        >\n          {({ elapsedTime }) =>\n            elapsedTime !== undefined\n              ? renderTime(\"\", duration - Math.floor(elapsedTime))\n              : renderTime(\"\", duration)\n          }\n        </CountdownCircleTimer>\n      </div>\n\n      <div className=\"timer-title\">\n        {\" \"}\n        {isWorkTime ? \"Work Time\" : \"Break Time\"}\n      </div>\n\n      <button className=\"timer-btn\" onClick={startTimer}>\n        Start\n      </button>\n      <button className=\"timer-btn\" onClick={pauseTimer}>\n        Pause\n      </button>\n      <button className=\"timer-btn\" onClick={resetTimer}>\n        Reset\n      </button>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}